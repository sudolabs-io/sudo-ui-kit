"use strict";(self.webpackChunkregistry_template=self.webpackChunkregistry_template||[]).push([[4020],{"./src/components/ui/toast.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toast_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/react-toast/dist/index.mjs"),class_variance_authority_dist=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),utils=__webpack_require__("./src/lib/utils.ts"),x=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/x.js");const ToastProvider=dist.Kq,ToastViewport=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.LM,{ref,className:(0,utils.cn)("fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",className),...props})));ToastViewport.displayName=dist.LM.displayName;const toastVariants=(0,class_variance_authority_dist.F)("group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",{variants:{variant:{default:"border bg-background text-foreground",destructive:"group border-destructive bg-destructive text-destructive-foreground"}},defaultVariants:{variant:"default"}}),Toast=react.forwardRef((({className,variant,...props},ref)=>(0,jsx_runtime.jsx)(dist.bL,{ref,className:(0,utils.cn)(toastVariants({variant}),className),...props})));Toast.displayName=dist.bL.displayName;const ToastAction=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.rc,{ref,className:(0,utils.cn)("inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",className),...props})));ToastAction.displayName=dist.rc.displayName;const ToastClose=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.bm,{ref,className:(0,utils.cn)("absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100",className),"toast-close":"",...props,children:(0,jsx_runtime.jsx)(x.A,{className:"h-4 w-4"})})));ToastClose.displayName=dist.bm.displayName;const ToastTitle=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.hE,{ref,className:(0,utils.cn)("text-sm font-semibold",className),...props})));ToastTitle.displayName=dist.hE.displayName;const ToastDescription=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.VY,{ref,className:(0,utils.cn)("text-sm opacity-90",className),...props})));ToastDescription.displayName=dist.VY.displayName,Toast.__docgenInfo={description:"",methods:[]},ToastAction.__docgenInfo={description:"",methods:[]},ToastClose.__docgenInfo={description:"",methods:[]},ToastDescription.__docgenInfo={description:"",methods:[]},ToastTitle.__docgenInfo={description:"",methods:[]},ToastViewport.__docgenInfo={description:"",methods:[]};let count=0;const toastTimeouts=new Map,addToRemoveQueue=toastId=>{if(toastTimeouts.has(toastId))return;const timeout=setTimeout((()=>{toastTimeouts.delete(toastId),dispatch({type:"REMOVE_TOAST",toastId})}),1e6);toastTimeouts.set(toastId,timeout)},reducer=(state,action)=>{switch(action.type){case"ADD_TOAST":return{...state,toasts:[action.toast,...state.toasts].slice(0,1)};case"UPDATE_TOAST":return{...state,toasts:state.toasts.map((t=>t.id===action.toast.id?{...t,...action.toast}:t))};case"DISMISS_TOAST":{const{toastId}=action;return toastId?addToRemoveQueue(toastId):state.toasts.forEach((stateToast=>{addToRemoveQueue(stateToast.id)})),{...state,toasts:state.toasts.map((t=>t.id===toastId||void 0===toastId?{...t,open:!1}:t))}}case"REMOVE_TOAST":return void 0===action.toastId?{...state,toasts:[]}:{...state,toasts:state.toasts.filter((t=>t.id!==action.toastId))};default:(0,utils.d)(action)}return state},listeners=[];let memoryState={toasts:[]};function dispatch(action){memoryState=reducer(memoryState,action),listeners.forEach((listener=>{listener(memoryState)}))}function toast({...props}){const id=function genId(){return count=(count+1)%Number.MAX_VALUE,count.toString()}(),dismiss=()=>dispatch({type:"DISMISS_TOAST",toastId:id});return dispatch({type:"ADD_TOAST",toast:{...props,id,open:!0,onOpenChange:open=>{open||dismiss()}}}),{id,dismiss,update:updateProps=>dispatch({type:"UPDATE_TOAST",toast:{...updateProps,id}})}}function Toaster(){const{toasts}=function useToast(){const[state,setState]=react.useState(memoryState);return react.useEffect((()=>(listeners.push(setState),()=>{const index=listeners.indexOf(setState);index>-1&&listeners.splice(index,1)})),[state]),{...state,toast,dismiss:toastId=>dispatch({type:"DISMISS_TOAST",toastId})}}();return(0,jsx_runtime.jsxs)(ToastProvider,{children:[toasts.map((({id,title,description,action,...props})=>(0,jsx_runtime.jsxs)(Toast,{...props,children:[(0,jsx_runtime.jsxs)("div",{className:"grid gap-1",children:[title&&(0,jsx_runtime.jsx)(ToastTitle,{children:title}),description&&(0,jsx_runtime.jsx)(ToastDescription,{children:description})]}),action,(0,jsx_runtime.jsx)(ToastClose,{})]},id))),(0,jsx_runtime.jsx)(ToastViewport,{})]})}Toaster.__docgenInfo={description:"",methods:[],displayName:"Toaster"};const ToastStory=()=>((0,react.useEffect)((()=>{toast({title:"Look at it!",description:"This is the example toast for you to see.",action:(0,jsx_runtime.jsx)(ToastAction,{altText:"Approve",children:"Approve"}),variant:"destructive"})})),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("p",{children:"Some content..."})})),Default={render:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Toaster,{}),(0,jsx_runtime.jsx)(ToastStory,{})]})},toast_stories={title:"Components/Toast/Toast",component:ToastStory},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n      <Toaster />\n      <ToastStory />\n    </>\n}",...Default.parameters?.docs?.source}}}}}]);