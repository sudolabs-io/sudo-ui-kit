{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "label",
  "type": "registry:ui",
  "description": "A form label component with required indicator and tooltip support",
  "dependencies": [
    "@radix-ui/react-label@2.1.2",
    "class-variance-authority@0.7.1"
  ],
  "registryDependencies": [
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/utils.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/tooltip.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/AsterixIcon.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/TooltipIcon.json"
  ],
  "files": [
    {
      "path": "registry/ui/label.tsx",
      "content": "import * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from 'lib/utils'\nimport { AsterixIcon, TooltipIcon } from 'components/icons'\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './tooltip'\n\nconst OPTIONAL_TAG = '- Optional'\n\nconst labelVariants = cva('inline-block text-sm font-medium leading-none text-foreground')\n\nexport type LabelProps = React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n  VariantProps<typeof labelVariants> & { required?: boolean; tooltip?: string }\n\nconst Label = React.forwardRef<React.ElementRef<typeof LabelPrimitive.Root>, LabelProps>(\n  ({ className, children, required, tooltip, ...props }, ref) => (\n    <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props}>\n      <div className=\"flex items-center gap-0.5\">\n        {children}\n        {required ? (\n          <AsterixIcon className=\"h-3 w-3 text-foreground\" />\n        ) : (\n          <span className=\"ml-0.5 font-normal\">{OPTIONAL_TAG}</span>\n        )}\n        {tooltip && (\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <div>\n                  <TooltipIcon className=\"ml-1 h-4 w-4 text-muted-foreground\" />\n                </div>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>{tooltip}</p>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        )}\n      </div>\n    </LabelPrimitive.Root>\n  ),\n)\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
      "type": "registry:ui",
      "target": "components/ui/label.tsx"
    },
    {
      "path": "registry/ui/label.stories.tsx",
      "content": "import { Meta, StoryObj } from '@storybook/react'\nimport { Label, LabelProps } from './label'\n\nconst LabelStory = (props: LabelProps) => <Label {...props}>Last name</Label>\n\ntype Story = StoryObj<typeof LabelStory>\n\nexport const Default: Story = {\n  render: () => <LabelStory />,\n}\n\nexport const Required: Story = {}\nRequired.args = {\n  ...Default.args,\n  required: true,\n}\n\nexport const WithTooltip: Story = {}\nWithTooltip.args = {\n  ...Required.args,\n  tooltip: 'We always keep your information safe.',\n}\n\nconst meta: Meta<typeof LabelStory> = {\n  title: 'Components/Label/Label',\n  component: LabelStory,\n}\n\nexport default meta\n",
      "type": "registry:ui",
      "target": "components/ui/label.stories.tsx"
    }
  ],
  "docs": "Use the label component for form inputs with optional and required state indicators",
  "categories": [
    "UI",
    "Forms"
  ]
}