{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar",
  "type": "registry:ui",
  "description": "A responsive navigation bar component with logo, menu items, and mobile menu support",
  "dependencies": [
    "next@15.2.0"
  ],
  "registryDependencies": [
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/utils.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/button.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/MenuIcon.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/PhoneIcon.json",
    "https://sudolabs-io.github.io/sudo-ui-kit/public/r/SearchIcon.json"
  ],
  "files": [
    {
      "path": "src/components/ui/navbar.tsx",
      "content": "import { forwardRef, PropsWithChildren, RefObject } from 'react'\nimport { cn } from 'lib/utils'\nimport Link, { LinkProps } from 'next/link'\nimport { Button, ButtonProps } from './button'\n\ninterface PropsWithClassName extends PropsWithChildren {\n  className?: string\n}\n\ninterface PropsWithHref extends PropsWithClassName, LinkProps {}\n\ninterface NavbarLogoProps extends Partial<PropsWithHref> {\n  logoSrc: string\n  logoAlt?: string\n  title: string\n}\n\ninterface NavbarItemGroupProps extends PropsWithClassName {\n  id?: string\n}\n\ninterface NavbarCTAButtonProps extends PropsWithClassName, ButtonProps {}\n\ninterface NavbarMenuButtonProps extends Partial<Omit<PropsWithClassName, 'children'>>, ButtonProps {\n  srOnlyText?: string\n  'data-collapse-toggle'?: string\n  menuRef: RefObject<HTMLDivElement | null>\n  onMenuVisibilityChange: () => void\n}\n\ninterface NavbarItemProps extends PropsWithClassName {}\n\nexport const NavbarLogo = ({ href, logoSrc, logoAlt, title, className }: NavbarLogoProps) => {\n  const children = (\n    <>\n      <img src={logoSrc} className=\"h-8\" alt={logoAlt} />\n      <span className=\"self-center whitespace-nowrap text-2xl font-semibold text-slate-900\">\n        {title}\n      </span>\n    </>\n  )\n  const wrapperClassName = cn('flex items-center space-x-3 rtl:space-x-reverse', className)\n\n  if (href) {\n    return (\n      <Link href={href} className={wrapperClassName}>\n        {children}\n      </Link>\n    )\n  }\n  return <div className={wrapperClassName}>{children}</div>\n}\n\nexport const NavbarItemGroup = forwardRef<HTMLDivElement, NavbarItemGroupProps>(\n  ({ children, className, ...props }, ref) => (\n    <div\n      className={cn(\n        'hidden w-full items-center justify-between md:flex md:w-auto md:static fixed left-0 top-24',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      <ul className=\"flex flex-col border border-gray-100 bg-white p-4 font-medium md:mt-0 md:flex-row md:space-x-8 md:rounded-lg md:border-0 md:bg-white md:p-0 rtl:space-x-reverse\">\n        {children}\n      </ul>\n    </div>\n  ),\n)\n\nexport const NavbarItem = ({ children, className, ...props }: NavbarItemProps) => (\n  <li {...props}>{children}</li>\n)\n\nexport const NavbarItemLink = ({ href, children, className }: PropsWithHref) => (\n  <Link\n    href={href}\n    className={cn(\n      'block rounded px-3 py-2 md:bg-transparent md:p-0 text-slate-900 text-base',\n      className,\n    )}\n    aria-current=\"false\"\n  >\n    {children}\n  </Link>\n)\n\nexport const NavbarButtonsWrapper = ({ children, className }: PropsWithClassName) => (\n  <div\n    className={cn(\n      'flex space-x-3 md:order-2 md:space-x-0 rtl:space-x-reverse gap-4 items-center',\n      className,\n    )}\n  >\n    {children}\n  </div>\n)\n\nexport const NavbarCTAButton = ({ children, ...props }: NavbarCTAButtonProps) => (\n  <Button {...props} type=\"button\">\n    {children}\n  </Button>\n)\n\nexport const NavbarMenuButton = ({\n  icon,\n  srOnlyText,\n  className,\n  'data-collapse-toggle': dataCollapseToggle,\n  menuRef,\n  onMenuVisibilityChange,\n  ...props\n}: NavbarMenuButtonProps) => (\n  <Button\n    data-collapse-toggle={dataCollapseToggle as string}\n    className={cn('md:hidden p-0', className)}\n    iconOnly\n    icon={icon}\n    variant=\"unstyled\"\n    size=\"xl\"\n    onClick={() => {\n      menuRef.current?.classList.toggle('hidden')\n      menuRef.current?.classList.toggle('block')\n      onMenuVisibilityChange()\n    }}\n    {...props}\n  >\n    {srOnlyText && <span className=\"sr-only\">{srOnlyText}</span>}\n  </Button>\n)\n\nexport const Navbar = ({ children, className }: PropsWithClassName) => (\n  <nav className={cn('fixed start-0 top-0 z-20 w-full border-gray-200 bg-white', className)}>\n    {children}\n  </nav>\n)\n\nexport const NavbarContent = ({ children, className }: PropsWithClassName) => (\n  <div\n    className={cn(\n      'flex flex-wrap items-center justify-between md:p-6 md:px-10 px-4 h-24 md:h-fit',\n      className,\n    )}\n  >\n    {children}\n  </div>\n)\n",
      "type": "registry:ui",
      "target": "components/ui/navbar.tsx"
    }
  ],
  "docs": "Use the navbar component to create responsive navigation bars with logo, menu items, and mobile menu support",
  "categories": [
    "UI",
    "Navigation",
    "Layout"
  ]
}