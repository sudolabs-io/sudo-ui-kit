{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sidebar",
  "type": "registry:ui",
  "description": "A responsive sidebar component with storybook integration.",
  "dependencies": [
    "react-icons",
    "@radix-ui/react-accordion",
    "@storybook/react"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/denis-sudolabs/nextjs-shadcn-registry/main/public/r/utils.json",
    "https://raw.githubusercontent.com/denis-sudolabs/nextjs-shadcn-registry/main/public/r/indicator.json",
    "button"
  ],
  "files": [
    {
      "path": "registry/ui/sidebar/sidebar.tsx",
      "content": "import * as React from 'react'\nimport { SVGProps } from 'react'\nimport { HiChevronDown } from 'react-icons/hi'\nimport * as AccordionPrimitive from '@radix-ui/react-accordion'\nimport { cn } from 'lib/utils'\n\nexport interface SidebarHeaderProps extends React.BaseHTMLAttributes<HTMLDivElement> {\n  icon: (props: SVGProps<SVGSVGElement>) => React.JSX.Element\n  collapsedIcon: (props: SVGProps<SVGSVGElement>) => React.JSX.Element\n}\n\nconst SidebarHeader = React.forwardRef<HTMLDivElement, SidebarHeaderProps>(\n  ({ className, icon: Icon, collapsedIcon: CollapsedIcon, ...props }, ref) => (\n    <div\n      className={cn(\n        'flex flex-none justify-center pt-4 sm:justify-start sm:pl-5 sm:pt-5',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      <div className=\"hidden sm:block\">\n        <Icon />\n      </div>\n\n      <div className=\"block sm:hidden\">\n        <CollapsedIcon />\n      </div>\n    </div>\n  ),\n)\n\nexport interface SidebarItemProps extends React.BaseHTMLAttributes<HTMLDivElement> {\n  text?: string\n  icon?: (props: SVGProps<SVGSVGElement>) => React.JSX.Element\n  rightAddon?: React.FC\n  isActive?: boolean\n}\n\nconst SidebarItem = React.forwardRef<HTMLDivElement, SidebarItemProps>(\n  ({ className, text, icon: Icon, rightAddon: RightAddon, isActive, ...props }, ref) => (\n    <div\n      className={cn(\n        'flex flex-row justify-center gap-3 rounded-lg sm:justify-start items-center sm:px-3 sm:py-2 sm:hover:bg-slate-100 cursor-pointer',\n        isActive && 'sm:bg-slate-100',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      {typeof Icon !== 'undefined' && (\n        <div className={cn('rounded-lg p-2 sm:p-0 hover:bg-slate-100', isActive && 'bg-slate-100')}>\n          <Icon className={cn('text-slate-500', isActive && 'text-slate-900')} />\n        </div>\n      )}\n\n      {text && <div className=\"hidden grow font-medium sm:block\">{text}</div>}\n\n      {typeof RightAddon !== 'undefined' && <RightAddon />}\n    </div>\n  ),\n)\n\nexport interface SidebarItemGroupProps extends React.BaseHTMLAttributes<HTMLDivElement> {}\n\nconst SidebarItemGroup = React.forwardRef<HTMLDivElement, SidebarItemGroupProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      className={cn(\n        'flex flex-none flex-col gap-2.5  border-b-[1px] pb-4 text-base font-medium sm:px-3',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      {props.children}\n    </div>\n  ),\n)\n\nexport interface SidebarCollapsibleItemGroupProps {\n  value: string\n}\n\nconst SidebarCollapsibleItemGroup = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Root> & SidebarCollapsibleItemGroupProps\n>(({ className, value, children, ...props }, ref) => (\n  <AccordionPrimitive.Root ref={ref} className={cn('sm:px-3', className)} {...props}>\n    <AccordionPrimitive.Item value={value} className=\"rounded-lg sm:hover:bg-slate-100\">\n      {children}\n    </AccordionPrimitive.Item>\n  </AccordionPrimitive.Root>\n))\n\nexport interface SidebarCollapsibleItemGroupTriggerProps {\n  icon: (props: SVGProps<SVGSVGElement>) => React.JSX.Element\n  isActive?: boolean\n}\n\nconst SidebarCollapsibleItemGroupTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger> &\n    SidebarCollapsibleItemGroupTriggerProps\n>(({ className, icon: Icon, isActive, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        'flex items-center text-start justify-center w-full text-lg sm:px-3 sm:py-2 gap-3 rounded-lg font-medium [&[data-state=open]>svg]:rotate-180',\n        isActive && 'sm:bg-slate-100',\n        className,\n      )}\n      {...props}\n    >\n      <div\n        className={cn(\n          'flex-none rounded-lg p-2 sm:p-0 hover:bg-slate-100',\n          isActive && 'bg-slate-100',\n        )}\n      >\n        <Icon className={cn('text-slate-500', isActive && 'text-slate-900')} />\n      </div>\n\n      <div className=\"hidden grow gap-3 sm:block\">{children}</div>\n\n      <HiChevronDown className=\"hidden h-6 w-6 flex-none transition-transform duration-200 sm:block\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\n\nconst SidebarCollapsibleItemGroupContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className={cn(\n      'overflow-hidden text-base transition-all pl-10 data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n  </AccordionPrimitive.Content>\n))\n\nexport interface SidebarFooterProps extends React.BaseHTMLAttributes<HTMLDivElement> {}\n\nconst SidebarFooter = React.forwardRef<HTMLDivElement, SidebarFooterProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      className={cn(\n        'flex grow flex-col items-center justify-end gap-1 pb-4 sm:flex-row sm:items-end sm:justify-center',\n        className,\n      )}\n      ref={ref}\n    >\n      {props.children}\n    </div>\n  ),\n)\n\nexport interface SidebarProps extends React.BaseHTMLAttributes<HTMLDivElement> {}\n\nconst Sidebar = React.forwardRef<HTMLDivElement, SidebarProps>(({ className, ...props }, ref) => (\n  <div\n    className={cn('flex h-full w-[60px] flex-col justify-start gap-4 sm:w-[250px]', className)}\n    ref={ref}\n    {...props}\n  >\n    {props.children}\n  </div>\n))\n\nexport {\n  Sidebar,\n  SidebarCollapsibleItemGroup,\n  SidebarCollapsibleItemGroupContent,\n  SidebarCollapsibleItemGroupTrigger,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarItem,\n  SidebarItemGroup,\n}\n",
      "type": "registry:component",
      "target": "components/ui/sidebar.tsx"
    },
    {
      "path": "registry/ui/sidebar/sidebar.stories.tsx",
      "content": "import { Meta, StoryObj } from '@storybook/react'\nimport {\n  AdjustmentsIcon,\n  ComponentsIcon,\n  FileIcon,\n  InboxIcon,\n  LifeBuoyIcon,\n  LockIcon,\n  MiniSudolabsIcon,\n  PieChartIcon,\n  SettingsIcon,\n  ShoppingCartIcon,\n  SudolabsIcon,\n  WorldIcon,\n} from 'components/icons'\nimport { Button } from './button'\nimport Indicator from './indicator'\nimport {\n  Sidebar,\n  SidebarCollapsibleItemGroup,\n  SidebarCollapsibleItemGroupContent,\n  SidebarCollapsibleItemGroupTrigger,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarItem,\n  SidebarItemGroup,\n} from './sidebar'\n\nconst MessagesIndicator = (messageCount: number) => (\n  <Indicator variant=\"number\" className=\"hidden sm:block\">\n    {messageCount}\n  </Indicator>\n)\n\nconst SidebarStory = () => (\n  <div className=\"h-screen\">\n    <Sidebar>\n      <SidebarHeader icon={SudolabsIcon} collapsedIcon={MiniSudolabsIcon} />\n\n      <SidebarItemGroup>\n        <SidebarItem icon={PieChartIcon} text=\"Overview\" isActive />\n        <SidebarItem icon={FileIcon} text=\"Pages\" />\n      </SidebarItemGroup>\n\n      <SidebarCollapsibleItemGroup type=\"single\" collapsible value=\"submenu-1\">\n        <SidebarCollapsibleItemGroupTrigger icon={ShoppingCartIcon} isActive>\n          Sales\n        </SidebarCollapsibleItemGroupTrigger>\n\n        <SidebarCollapsibleItemGroupContent>\n          <SidebarItem text=\"Product list\" className=\"sm:px-0\" />\n          <SidebarItem text=\"Billing\" className=\"sm:px-0\" />\n          <SidebarItem text=\"Invoice\" className=\"sm:px-0\" />\n        </SidebarCollapsibleItemGroupContent>\n      </SidebarCollapsibleItemGroup>\n\n      <SidebarItemGroup>\n        <SidebarItem icon={InboxIcon} text=\"Messages\" rightAddon={() => MessagesIndicator(1)} />\n        <SidebarItem icon={LockIcon} text=\"Authentication\" />\n      </SidebarItemGroup>\n\n      <SidebarItemGroup>\n        <SidebarItem icon={PieChartIcon} text=\"Docs\" />\n        <SidebarItem icon={ComponentsIcon} text=\"Components\" />\n        <SidebarItem icon={LifeBuoyIcon} text=\"Help\" />\n      </SidebarItemGroup>\n\n      <SidebarItemGroup className=\"px-2\">\n        <Button className=\"w-full text-center \">Sign In</Button>\n      </SidebarItemGroup>\n\n      <SidebarFooter>\n        <SidebarItem icon={AdjustmentsIcon} />\n        <SidebarItem icon={WorldIcon} />\n        <SidebarItem icon={SettingsIcon} />\n      </SidebarFooter>\n    </Sidebar>\n  </div>\n)\n\ntype Story = StoryObj<typeof Sidebar>\n\nexport const Default: Story = {\n  render: () => <SidebarStory />,\n}\n\nconst meta: Meta<typeof Sidebar> = {\n  title: 'Components/Sidebar/Sidebar',\n  component: Sidebar,\n  parameters: {\n    layout: 'fullscreen',\n  },\n}\n\nexport default meta\n",
      "type": "registry:component",
      "target": "components/ui/sidebar.stories.tsx"
    }
  ],
  "docs": "Set up the sidebar by importing it into your project and adjusting its props as needed.",
  "categories": [
    "UI",
    "Layout"
  ]
}